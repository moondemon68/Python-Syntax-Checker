if else elif while for in range import as from module rename def class return condition openparentheses closeparentheses colon newline variable number false true or is break continue pass none exception arithmeticop logicalop equal
S ALGORITHM IF_STATEMENT ELIF_STATEMENT ELSE_STATEMENT WHILE_COND FOR_LOOP FOR_RANGE IMPORT DEF CLASS RETURN FALSE TRUE OR IS SINGLE_PARAMETER MULTI_PARAMETER EXPRESSION BREAK CONTINUE PASS EXCEPTION CLOSE_EXPRESSION ARITHMETIC_EXPRESSION CONDITIONAL LOGICAL_EXPRESSION
S -> ALGORITHM
ALGORITHM -> IF_STATEMENT | ALGORITHM newline ALGORITHM | variable equal EXPRESSION
IF_STATEMENT -> if openparentheses LOGICAL_EXPRESSION closeparentheses colon newline ALGORITHM newline | if LOGICAL_EXPRESSION colon newline ALGORITHM newline | IF_STATEMENT ELIF_STATEMENT | IF_STATEMENT ELIF_STATEMENT ELSE_STATEMENT | IF_STATEMENT ELSE_STATEMENT
ELIF_STATEMENT -> ELIF_STATEMENT ELIF_STATEMENT | elif openparentheses LOGICAL_EXPRESSION closeparentheses colon newline ALGORITHM newline | elif LOGICAL_EXPRESSION colon newline ALGORITHM newline
ELSE_STATEMENT -> else colon newline ALGORITHM newline
EXPRESSION -> variable | number | openparentheses CLOSE_EXPRESSION | EXPRESSION ARITHMETIC_EXPRESSION
ARITHMETIC_EXPRESSION -> arithmeticop EXPRESSION
CLOSE_EXPRESSION -> EXPRESSION closeparentheses
LOGICAL_EXPRESSION -> EXPRESSION logicalop EXPRESSION